source('~/Advisory/3_Coursera - The Data Science Specialization/2 - R Programming/3_Project/ProgrammingAssignment2/cachematrix.R')
amatrix = makeCacheMatrix(matrix(c(1,2,3,4), nrow=2, ncol=2))
cacheSolve(amatrix)
source('~/.active-rstudio-document')
cacheSolve(amatrix)
amatrix = makeCacheMatrix(matrix(c(1,2,3,4), nrow=2, ncol=2))
cacheSolve(amatrix)
source('~/.active-rstudio-document')
amatrix = makeCacheMatrix(matrix(c(1,2,3,4), nrow=2, ncol=2))
cacheSolve(amatrix)
source('~/.active-rstudio-document')
amatrix = makeCacheMatrix(matrix(c(1,2,3,4), nrow=2, ncol=2))
cacheSolve(amatrix)
source('~/.active-rstudio-document')
solve()
inverse()
library(plyr)
library(plyr)
---
title: "Reproducible Research: Peer Assessment 1"
output:
html_document:
keep_md: true
---
# Reproducible Research: Peer Assessment 1
Hans-Christian Schaefer<br>
15.11.2014
## 0. Load necessary libraries and set locale for weekdays
```{r libraries, echo = TRUE, results = "hide"}
library(plyr)
library(ggplot2)
library(lattice)
Sys.setlocale(category = "LC_ALL", "C")
```
## 1. Loading and preprocessing the data
```{r loading, echo = TRUE}
## Load the activity data in a data frame
data <- read.csv("./activity.csv")
## Create a sum aggragation of the steps based on the date
sum <- aggregate(data$steps, by=data["date"], FUN=sum)
## Set new column headers for the sum data frame
colnames(sum) <- c("date", "sumofsteps")
```
## 2. What is mean total number of steps taken per day?
```{r mean, echo = TRUE}
## Transform the date into a date type
sum$date <- as.Date(sum$date, "%Y-%m-%d")
## Make a histogram of the total number of steps taken each day
histo <- qplot(sumofsteps, data=sum, geom="histogram", binwidth = 500, main = "Histogram of the total number of steps taken each day", xlab = "Steps per Day", ylab = "Count of Days")
## Calculate the mean total number of steps taken per day
mean <- mean(sum$sumofsteps, na.rm = TRUE)
## Calculate the median total number of steps taken per day
median <- median(sum$sumofsteps, na.rm = TRUE)
```
The mean of the total number of steps taken per day is: `r mean`<br>
The median of the total number of steps taken per day is: `r median`
## 3. What is the average daily activity pattern?
```{r activity_pattern, echo = TRUE}
average <- aggregate(data$steps, by=data["interval"], FUN=mean, na.rm=TRUE)
colnames(average) <- c("interval", "averagesteps")
xyplot(averagesteps ~ interval, data = average, type = "l", main = "Plot of the 5-minute interval and the average number of steps taken per day", xlab = "5-minute Interval", ylab = "Average Steps per Day")
max <- (average[which.max(average$averagesteps), ])$interval
```
## 4. Imputing missing values
```{r missing_values, echo = TRUE}
missingSteps <- sum(is.na(data$steps))
missingDates <- sum(is.na(data$date))
missingInterval <- sum(is.na(data$interval))
missingRows <- sum(!complete.cases(data))
rowsNA <- data[!complete.cases(data),]
rowsCO <- data[complete.cases(data),]
rowsNA <- merge(subset(rowsNA, select = -steps),average,by="interval")
colnames(rowsNA) <- c("interval", "date", "steps")
rowsNA <- rbind(rowsCO, rowsNA)
rm(rowsCO)
data2 <- subset(data, select = -steps)
data2 <- join(data2, rowsNA, by=c("interval", "date"))
rm(rowsNA)
data2 <- transform(data2, steps = as.integer(steps))
data2 <- data2[ ,c("steps","date","interval")]
write.table(data2, "./activity_withoutNA.csv", sep=",", row.name=FALSE)
sum2 <- aggregate(data2$steps, by=data2["date"], FUN=sum)
colnames(sum2) <- c("date", "sumofsteps")
sum2$date <- as.Date(sum2$date, "%Y-%m-%d")
qplot(sumofsteps, data=sum2, geom="histogram", binwidth = 500, main = "Histogram of the total number of steps taken each day", xlab = "Steps per Day", ylab = "Count of Days")
mean2 <- mean(sum2$sumofsteps, na.rm = TRUE)
median2 <- median(sum2$sumofsteps, na.rm = TRUE)
```
## 5. Are there differences in activity patterns between weekdays and weekends?
```{r weekdays_end, echo = TRUE}
data2$date <- as.Date(data2$date, "%Y-%m-%d")
data2$weekday <- weekdays(data2$date)
data2$type <- ifelse(data2$weekday == "Saturday","weekend", ifelse(data2$weekday == "Sunday","weekend", "weekday"))
average2 <- aggregate(data2$steps, by=data2[c("interval","type")], FUN=mean, na.rm=TRUE)
colnames(average2) <- c("interval", "type", "averagesteps")
xyplot(averagesteps ~ interval | type, data = average2, layout = c(1, 2), type = "l", main = "Plot of the 5-minute interval and the average number of steps taken per weekday and weekend", xlab = "5-minute Interval", ylab = "Average Number of Steps")
write.table(data2, "./activity_withoutNA_weekdays.csv", sep=",", row.name=FALSE)
```
library(plyr)
library(ggplot2)
library(lattice)
Sys.setlocale(category = "LC_ALL", "C")
data <- read.csv("./activity.csv")
setwd("~/Advisory/3_Coursera - The Data Science Specialization/5 - Reproducible Research/2_Assignment 1/RepData_PeerAssessment1")
data <- read.csv("./activity.csv")
sum <- aggregate(data$steps, by=data["date"], FUN=sum)
colnames(sum) <- c("date", "sumofsteps")
sum$date <- as.Date(sum$date, "%Y-%m-%d")
histo <- qplot(sumofsteps, data=sum, geom="histogram", binwidth = 500, main = "Histogram of the total number of steps taken each day", xlab = "Steps per Day", ylab = "Count of Days")
mean <- mean(sum$sumofsteps, na.rm = TRUE)
median <- median(sum$sumofsteps, na.rm = TRUE)
round(mean, digits = 2)
mena <- round(mean, digits = 2)
mean <- round(mean, digits = 2)
print("The mean of the total number of steps taken per day is:" & mean)
print("The mean of the total number of steps taken per day is:" && mean)
average <- aggregate(data$steps, by=data["interval"], FUN=mean, na.rm=TRUE)
colnames(average) <- c("interval", "averagesteps")
xyplot(averagesteps ~ interval, data = average, type = "l", main = "Plot of the 5-minute interval and the average number of steps taken per day", xlab = "5-minute Interval", ylab = "Average Steps per Day")
xyplot(averagesteps ~ interval, data = average, type = "l", main = "5-minute interval and the average number of steps taken per day", xlab = "5-minute Interval", ylab = "Average Steps per Day")
xyplot(averagesteps ~ interval, data = average, type = "l", main = "Interval and the average number of steps taken per day", xlab = "5-minute Interval", ylab = "Average Steps per Day")
max <- (average[which.max(average$averagesteps), ])$interval
---
title: "Reproducible Research: Peer Assessment 1"
output:
html_document:
keep_md: true
---
# Reproducible Research: Peer Assessment 1
Hans-Christian Schaefer<br>
15.11.2014
## 0. Load necessary libraries and set locale for weekdays
```{r libraries, echo = TRUE, results = "hide"}
library(plyr)
library(ggplot2)
library(lattice)
Sys.setlocale(category = "LC_ALL", "C")
```
## 1. Loading and preprocessing the data
```{r loading, echo = TRUE}
## Load the activity data in a data frame
data <- read.csv("./activity.csv")
## Create a sum aggragation of the steps based on the date
sum <- aggregate(data$steps, by=data["date"], FUN=sum)
## Set new column headers for the sum data frame
colnames(sum) <- c("date", "sumofsteps")
```
## 2. What is mean total number of steps taken per day?
```{r mean, echo = TRUE}
## Transform the date into a date type
sum$date <- as.Date(sum$date, "%Y-%m-%d")
## Make a histogram of the total number of steps taken each day
qplot(sumofsteps, data=sum, geom="histogram", binwidth = 500, main = "Histogram of the total number of steps taken each day", xlab = "Steps per Day", ylab = "Count of Days")
## Calculate the mean total number of steps taken per day
mean <- mean(sum$sumofsteps, na.rm = TRUE)
sprintf("The mean of the total number of steps taken per day is: %f",  mean)
## Calculate the median total number of steps taken per day
median <- median(sum$sumofsteps, na.rm = TRUE)
sprintf("The median of the total number of steps taken per day is: %f",  median)
```
## 3. What is the average daily activity pattern?
```{r activity_pattern, echo = TRUE}
## Create a mean aggragation of the steps based on the interval
average <- aggregate(data$steps, by=data["interval"], FUN=mean, na.rm=TRUE)
## Set new column headers for the mean/average data frame
colnames(average) <- c("interval", "averagesteps")
## Make a time series plot (i.e. type = "l") of the 5-minute interval (x-axis) and the average number of steps taken, averaged across all days (y-axis)
xyplot(averagesteps ~ interval, data = average, type = "l", main = "Interval and the average number of steps taken per day", xlab = "5-minute Interval", ylab = "Average Steps per Day")
## Which 5-minute interval, on average across all the days in the dataset, contains the maximum number of steps?
max <- (average[which.max(average$averagesteps), ])$interval
sprintf("The maxmium number of average steps are during the following interval: %x",  max)
```
## 4. Imputing missing values
```{r missing_values, echo = TRUE}
missingSteps <- sum(is.na(data$steps))
missingDates <- sum(is.na(data$date))
missingInterval <- sum(is.na(data$interval))
missingRows <- sum(!complete.cases(data))
rowsNA <- data[!complete.cases(data),]
rowsCO <- data[complete.cases(data),]
rowsNA <- merge(subset(rowsNA, select = -steps),average,by="interval")
colnames(rowsNA) <- c("interval", "date", "steps")
rowsNA <- rbind(rowsCO, rowsNA)
rm(rowsCO)
data2 <- subset(data, select = -steps)
data2 <- join(data2, rowsNA, by=c("interval", "date"))
rm(rowsNA)
data2 <- transform(data2, steps = as.integer(steps))
data2 <- data2[ ,c("steps","date","interval")]
write.table(data2, "./activity_withoutNA.csv", sep=",", row.name=FALSE)
sum2 <- aggregate(data2$steps, by=data2["date"], FUN=sum)
colnames(sum2) <- c("date", "sumofsteps")
sum2$date <- as.Date(sum2$date, "%Y-%m-%d")
qplot(sumofsteps, data=sum2, geom="histogram", binwidth = 500, main = "Histogram of the total number of steps taken each day", xlab = "Steps per Day", ylab = "Count of Days")
mean2 <- mean(sum2$sumofsteps, na.rm = TRUE)
median2 <- median(sum2$sumofsteps, na.rm = TRUE)
```
## 5. Are there differences in activity patterns between weekdays and weekends?
```{r weekdays_end, echo = TRUE}
data2$date <- as.Date(data2$date, "%Y-%m-%d")
data2$weekday <- weekdays(data2$date)
data2$type <- ifelse(data2$weekday == "Saturday","weekend", ifelse(data2$weekday == "Sunday","weekend", "weekday"))
average2 <- aggregate(data2$steps, by=data2[c("interval","type")], FUN=mean, na.rm=TRUE)
colnames(average2) <- c("interval", "type", "averagesteps")
xyplot(averagesteps ~ interval | type, data = average2, layout = c(1, 2), type = "l", main = "Plot of the 5-minute interval and the average number of steps taken per weekday and weekend", xlab = "5-minute Interval", ylab = "Average Number of Steps")
write.table(data2, "./activity_withoutNA_weekdays.csv", sep=",", row.name=FALSE)
```
---
title: "Reproducible Research: Peer Assessment 1"
output:
html_document:
keep_md: true
---
# Reproducible Research: Peer Assessment 1
Hans-Christian Schaefer<br>
15.11.2014
## 0. Load necessary libraries and set locale for weekdays
```{r libraries, echo = TRUE, results = "hide"}
library(plyr)
library(ggplot2)
library(lattice)
Sys.setlocale(category = "LC_ALL", "C")
```
## 1. Loading and preprocessing the data
```{r loading, echo = TRUE}
## Load the activity data in a data frame
data <- read.csv("./activity.csv")
## Create a sum aggragation of the steps based on the date
sum <- aggregate(data$steps, by=data["date"], FUN=sum)
## Set new column headers for the sum data frame
colnames(sum) <- c("date", "sumofsteps")
```
## 2. What is mean total number of steps taken per day?
```{r mean, echo = TRUE}
## Transform the date into a date type
sum$date <- as.Date(sum$date, "%Y-%m-%d")
## Make a histogram of the total number of steps taken each day
qplot(sumofsteps, data=sum, geom="histogram", binwidth = 500, main = "Histogram of the total number of steps taken each day", xlab = "Steps per Day", ylab = "Count of Days")
## Calculate the mean total number of steps taken per day
mean <- mean(sum$sumofsteps, na.rm = TRUE)
## Calculate the median total number of steps taken per day
median <- median(sum$sumofsteps, na.rm = TRUE)
sprintf("The median of the total number of steps taken per day is: %f",  median)
```
The mean of the total number of steps taken per day is: `r mean `
## 3. What is the average daily activity pattern?
```{r activity_pattern, echo = TRUE}
## Create a mean aggragation of the steps based on the interval
average <- aggregate(data$steps, by=data["interval"], FUN=mean, na.rm=TRUE)
## Set new column headers for the mean/average data frame
colnames(average) <- c("interval", "averagesteps")
## Make a time series plot (i.e. type = "l") of the 5-minute interval (x-axis) and the average number of steps taken, averaged across all days (y-axis)
xyplot(averagesteps ~ interval, data = average, type = "l", main = "Interval and the average number of steps taken per day", xlab = "5-minute Interval", ylab = "Average Steps per Day")
## Which 5-minute interval, on average across all the days in the dataset, contains the maximum number of steps?
max <- (average[which.max(average$averagesteps), ])$interval
sprintf("The maxmium number of average steps are during the following interval: %x",  max)
```
## 4. Imputing missing values
```{r missing_values, echo = TRUE}
missingSteps <- sum(is.na(data$steps))
missingDates <- sum(is.na(data$date))
missingInterval <- sum(is.na(data$interval))
missingRows <- sum(!complete.cases(data))
rowsNA <- data[!complete.cases(data),]
rowsCO <- data[complete.cases(data),]
rowsNA <- merge(subset(rowsNA, select = -steps),average,by="interval")
colnames(rowsNA) <- c("interval", "date", "steps")
rowsNA <- rbind(rowsCO, rowsNA)
rm(rowsCO)
data2 <- subset(data, select = -steps)
data2 <- join(data2, rowsNA, by=c("interval", "date"))
rm(rowsNA)
data2 <- transform(data2, steps = as.integer(steps))
data2 <- data2[ ,c("steps","date","interval")]
write.table(data2, "./activity_withoutNA.csv", sep=",", row.name=FALSE)
sum2 <- aggregate(data2$steps, by=data2["date"], FUN=sum)
colnames(sum2) <- c("date", "sumofsteps")
sum2$date <- as.Date(sum2$date, "%Y-%m-%d")
qplot(sumofsteps, data=sum2, geom="histogram", binwidth = 500, main = "Histogram of the total number of steps taken each day", xlab = "Steps per Day", ylab = "Count of Days")
mean2 <- mean(sum2$sumofsteps, na.rm = TRUE)
median2 <- median(sum2$sumofsteps, na.rm = TRUE)
```
## 5. Are there differences in activity patterns between weekdays and weekends?
```{r weekdays_end, echo = TRUE}
data2$date <- as.Date(data2$date, "%Y-%m-%d")
data2$weekday <- weekdays(data2$date)
data2$type <- ifelse(data2$weekday == "Saturday","weekend", ifelse(data2$weekday == "Sunday","weekend", "weekday"))
average2 <- aggregate(data2$steps, by=data2[c("interval","type")], FUN=mean, na.rm=TRUE)
colnames(average2) <- c("interval", "type", "averagesteps")
xyplot(averagesteps ~ interval | type, data = average2, layout = c(1, 2), type = "l", main = "Plot of the 5-minute interval and the average number of steps taken per weekday and weekend", xlab = "5-minute Interval", ylab = "Average Number of Steps")
write.table(data2, "./activity_withoutNA_weekdays.csv", sep=",", row.name=FALSE)
```
---
title: "Reproducible Research: Peer Assessment 1"
output:
html_document:
keep_md: true
---
# Reproducible Research: Peer Assessment 1
Hans-Christian Schaefer<br>
15.11.2014
## 0. Load necessary libraries and set locale for weekdays
```{r libraries, echo = TRUE, results = "hide"}
library(plyr)
library(ggplot2)
library(lattice)
Sys.setlocale(category = "LC_ALL", "C")
```
## 1. Loading and preprocessing the data
```{r loading, echo = TRUE}
## Load the activity data in a data frame
data <- read.csv("./activity.csv")
## Create a sum aggragation of the steps based on the date
sum <- aggregate(data$steps, by=data["date"], FUN=sum)
## Set new column headers for the sum data frame
colnames(sum) <- c("date", "sumofsteps")
```
## 2. What is mean total number of steps taken per day?
```{r mean, echo = TRUE}
## Transform the date into a date type
sum$date <- as.Date(sum$date, "%Y-%m-%d")
## Make a histogram of the total number of steps taken each day
qplot(sumofsteps, data=sum, geom="histogram", binwidth = 500, main = "Histogram of the total number of steps taken each day", xlab = "Steps per Day", ylab = "Count of Days")
## Calculate the mean total number of steps taken per day
mean <- as.double(mean(sum$sumofsteps, na.rm = TRUE))
## Calculate the median total number of steps taken per day
median <- median(sum$sumofsteps, na.rm = TRUE)
sprintf("The median of the total number of steps taken per day is: %f",  median)
```
The mean of the total number of steps taken per day is: `r mean `
## 3. What is the average daily activity pattern?
```{r activity_pattern, echo = TRUE}
## Create a mean aggragation of the steps based on the interval
average <- aggregate(data$steps, by=data["interval"], FUN=mean, na.rm=TRUE)
## Set new column headers for the mean/average data frame
colnames(average) <- c("interval", "averagesteps")
## Make a time series plot (i.e. type = "l") of the 5-minute interval (x-axis) and the average number of steps taken, averaged across all days (y-axis)
xyplot(averagesteps ~ interval, data = average, type = "l", main = "Interval and the average number of steps taken per day", xlab = "5-minute Interval", ylab = "Average Steps per Day")
## Which 5-minute interval, on average across all the days in the dataset, contains the maximum number of steps?
max <- (average[which.max(average$averagesteps), ])$interval
sprintf("The maxmium number of average steps are during the following interval: %x",  max)
```
## 4. Imputing missing values
```{r missing_values, echo = TRUE}
missingSteps <- sum(is.na(data$steps))
missingDates <- sum(is.na(data$date))
missingInterval <- sum(is.na(data$interval))
missingRows <- sum(!complete.cases(data))
rowsNA <- data[!complete.cases(data),]
rowsCO <- data[complete.cases(data),]
rowsNA <- merge(subset(rowsNA, select = -steps),average,by="interval")
colnames(rowsNA) <- c("interval", "date", "steps")
rowsNA <- rbind(rowsCO, rowsNA)
rm(rowsCO)
data2 <- subset(data, select = -steps)
data2 <- join(data2, rowsNA, by=c("interval", "date"))
rm(rowsNA)
data2 <- transform(data2, steps = as.integer(steps))
data2 <- data2[ ,c("steps","date","interval")]
write.table(data2, "./activity_withoutNA.csv", sep=",", row.name=FALSE)
sum2 <- aggregate(data2$steps, by=data2["date"], FUN=sum)
colnames(sum2) <- c("date", "sumofsteps")
sum2$date <- as.Date(sum2$date, "%Y-%m-%d")
qplot(sumofsteps, data=sum2, geom="histogram", binwidth = 500, main = "Histogram of the total number of steps taken each day", xlab = "Steps per Day", ylab = "Count of Days")
mean2 <- mean(sum2$sumofsteps, na.rm = TRUE)
median2 <- median(sum2$sumofsteps, na.rm = TRUE)
```
## 5. Are there differences in activity patterns between weekdays and weekends?
```{r weekdays_end, echo = TRUE}
data2$date <- as.Date(data2$date, "%Y-%m-%d")
data2$weekday <- weekdays(data2$date)
data2$type <- ifelse(data2$weekday == "Saturday","weekend", ifelse(data2$weekday == "Sunday","weekend", "weekday"))
average2 <- aggregate(data2$steps, by=data2[c("interval","type")], FUN=mean, na.rm=TRUE)
colnames(average2) <- c("interval", "type", "averagesteps")
xyplot(averagesteps ~ interval | type, data = average2, layout = c(1, 2), type = "l", main = "Plot of the 5-minute interval and the average number of steps taken per weekday and weekend", xlab = "5-minute Interval", ylab = "Average Number of Steps")
write.table(data2, "./activity_withoutNA_weekdays.csv", sep=",", row.name=FALSE)
```
---
title: "Reproducible Research: Peer Assessment 1"
output:
html_document:
keep_md: true
---
# Reproducible Research: Peer Assessment 1
Hans-Christian Schaefer<br>
15.11.2014
## 0. Load necessary libraries and set locale for weekdays
```{r libraries, echo = TRUE, results = "hide"}
library(plyr)
library(ggplot2)
library(lattice)
Sys.setlocale(category = "LC_ALL", "C")
```
## 1. Loading and preprocessing the data
```{r loading, echo = TRUE}
## Load the activity data in a data frame
data <- read.csv("./activity.csv")
## Create a sum aggragation of the steps based on the date
sum <- aggregate(data$steps, by=data["date"], FUN=sum)
## Set new column headers for the sum data frame
colnames(sum) <- c("date", "sumofsteps")
```
## 2. What is mean total number of steps taken per day?
```{r mean, echo = TRUE}
## Transform the date into a date type
sum$date <- as.Date(sum$date, "%Y-%m-%d")
## Make a histogram of the total number of steps taken each day
qplot(sumofsteps, data=sum, geom="histogram", binwidth = 500, main = "Histogram of the total number of steps taken each day", xlab = "Steps per Day", ylab = "Count of Days")
## Calculate the mean total number of steps taken per day
mean <- as.double(mean(sum$sumofsteps, na.rm = TRUE))
## Calculate the median total number of steps taken per day
median <- median(sum$sumofsteps, na.rm = TRUE)
sprintf("The median of the total number of steps taken per day is: %f",  median)
```
The mean of the total number of steps taken per day is: `r mean `
## 3. What is the average daily activity pattern?
```{r activity_pattern, echo = TRUE}
## Create a mean aggragation of the steps based on the interval
average <- aggregate(data$steps, by=data["interval"], FUN=mean, na.rm=TRUE)
## Set new column headers for the mean/average data frame
colnames(average) <- c("interval", "averagesteps")
## Make a time series plot (i.e. type = "l") of the 5-minute interval (x-axis) and the average number of steps taken, averaged across all days (y-axis)
xyplot(averagesteps ~ interval, data = average, type = "l", main = "Interval and the average number of steps taken per day", xlab = "5-minute Interval", ylab = "Average Steps per Day")
## Which 5-minute interval, on average across all the days in the dataset, contains the maximum number of steps?
max <- (average[which.max(average$averagesteps), ])$interval
sprintf("The maxmium number of average steps are during the following interval: %x",  max)
```
## 4. Imputing missing values
```{r missing_values, echo = TRUE}
missingSteps <- sum(is.na(data$steps))
missingDates <- sum(is.na(data$date))
missingInterval <- sum(is.na(data$interval))
missingRows <- sum(!complete.cases(data))
rowsNA <- data[!complete.cases(data),]
rowsCO <- data[complete.cases(data),]
rowsNA <- merge(subset(rowsNA, select = -steps),average,by="interval")
colnames(rowsNA) <- c("interval", "date", "steps")
rowsNA <- rbind(rowsCO, rowsNA)
rm(rowsCO)
data2 <- subset(data, select = -steps)
data2 <- join(data2, rowsNA, by=c("interval", "date"))
rm(rowsNA)
data2 <- transform(data2, steps = as.integer(steps))
data2 <- data2[ ,c("steps","date","interval")]
write.table(data2, "./activity_withoutNA.csv", sep=",", row.name=FALSE)
sum2 <- aggregate(data2$steps, by=data2["date"], FUN=sum)
colnames(sum2) <- c("date", "sumofsteps")
sum2$date <- as.Date(sum2$date, "%Y-%m-%d")
qplot(sumofsteps, data=sum2, geom="histogram", binwidth = 500, main = "Histogram of the total number of steps taken each day", xlab = "Steps per Day", ylab = "Count of Days")
mean2 <- mean(sum2$sumofsteps, na.rm = TRUE)
median2 <- median(sum2$sumofsteps, na.rm = TRUE)
```
## 5. Are there differences in activity patterns between weekdays and weekends?
```{r weekdays_end, echo = TRUE}
data2$date <- as.Date(data2$date, "%Y-%m-%d")
data2$weekday <- weekdays(data2$date)
data2$type <- ifelse(data2$weekday == "Saturday","weekend", ifelse(data2$weekday == "Sunday","weekend", "weekday"))
average2 <- aggregate(data2$steps, by=data2[c("interval","type")], FUN=mean, na.rm=TRUE)
colnames(average2) <- c("interval", "type", "averagesteps")
xyplot(averagesteps ~ interval | type, data = average2, layout = c(1, 2), type = "l", main = "Plot of the 5-minute interval and the average number of steps taken per weekday and weekend", xlab = "5-minute Interval", ylab = "Average Number of Steps")
write.table(data2, "./activity_withoutNA_weekdays.csv", sep=",", row.name=FALSE)
```
maxsteps <- (average[which.max(average$averagesteps), ])
View(maxsteps)
qplot(sumofsteps, data=sum2, geom="histogram", binwidth = 500, main = "Histogram of the total number of steps taken each day", xlab = "Steps per Day", ylab = "Count of Days")
qplot(sumofsteps, data=sum2, geom="histogram", binwidth = 500, main = "Histogram of the total number of steps taken each day (wh NA)", xlab = "Steps per Day", ylab = "Count of Days")
mean2 <- as.double(mean(sum2$sumofsteps, na.rm = FALSE))
sprintf("The mean of the total number of steps taken per day is: %f", mean2)
xyplot(averagesteps ~ interval | type, data = average2, layout = c(1, 2), type = "l", main = "Plot of the 5-minute interval and the average number of steps taken per weekday and weekend", xlab = "5-minute Interval", ylab = "Average Number of Steps")
xyplot(averagesteps ~ interval | type, data = average2, layout = c(1, 2), type = "l", main = "Interval and the average number of steps taken per weekday and weekend", xlab = "5-minute Interval", ylab = "Average Number of Steps")
xyplot(averagesteps ~ interval | type, data = average2, layout = c(1, 2), type = "l", main = "Interval and the average number of steps per weekday and weekend", xlab = "5-minute Interval", ylab = "Average Number of Steps")
xyplot(averagesteps ~ interval | type, data = average2, layout = c(1, 2), type = "l", main = "Interval and the average steps per weekday and weekend", xlab = "5-minute Interval", ylab = "Average Number of Steps")

source('~/Advisory/3_Coursera - The Data Science Specialization/2 - R Programming/3_Project/ProgrammingAssignment2/cachematrix.R')
amatrix = makeCacheMatrix(matrix(c(1,2,3,4), nrow=2, ncol=2))
cacheSolve(amatrix)
source('~/.active-rstudio-document')
cacheSolve(amatrix)
amatrix = makeCacheMatrix(matrix(c(1,2,3,4), nrow=2, ncol=2))
cacheSolve(amatrix)
source('~/.active-rstudio-document')
amatrix = makeCacheMatrix(matrix(c(1,2,3,4), nrow=2, ncol=2))
cacheSolve(amatrix)
source('~/.active-rstudio-document')
amatrix = makeCacheMatrix(matrix(c(1,2,3,4), nrow=2, ncol=2))
cacheSolve(amatrix)
source('~/.active-rstudio-document')
solve()
inverse()
setwd("~/Advisory/3_Coursera - The Data Science Specialization/5 - Reproducible Research/2_Assignment 1/RepData_PeerAssessment1")
data <- read.csv("./activity.csv")
sum <- aggregate(data$steps, by=data["date"], FUN=sum)
colnames(sum) <- c("date", "sum of steps")
View(data)
View(sum)
hist(sum$"sum of steps", col = "red", main = "Histogram of the total number of steps taken each day", xlab = "Steps")
mean <- mean(sum$"sum of steps", na.rm = TRUE)
median <- median(sum$"sum of steps", na.rm = TRUE)
average <- aggregate(data$steps, by=data["interval"], FUN=mean, na.rm=TRUE)
View(average)
plot(average$interval, average$"average of steps", type = "l")
View(average)
plot(as.ts(average$interval), as.ts(average$"average of steps"), type = "l")
test <- as.ts(average)
plot(test, type = "l")
max <- (average[which.max(average$"average of steps"), ])$interval
max <- (average[which.max(average$"average of steps"), ])$interval
test2 <- which.max(average$"average of steps")
test2 <- which.max(average)
test2 <- which.max(average$"interval")
View(average)
print(test2)
test2 <- aggregate(average$"average of steps", data=average, max)
test2 <- aggregate(average$"average of steps", data=average, FUN=max)
test2 <- aggregate(average$"interval", average$"average of steps", FUN=max)
test2 <- max(average$"average of steps")
test2 <- sapply(average, max, na.rm = TRUE)
View(average)
test2 <- sapply(average$"average of steps", max, na.rm = TRUE)
test2 <- data.frame(tapply(average$"average of steps", average$interval), max))
test2 <- data.frame(tapply(average$"average of steps", average$interval, max))
ag <- aggregate(interval~"average of steps", data=average, max)
ag <- aggregate(average$interval~average$"average of steps", data=average, max)
ag <- aggregate("interval"~"average of steps", data=average, max)
ag <- with(average, interval["average of steps"== max("average of steps")])
print(ag)
ag <- with(average, interval[max("average of steps")])
ag <- with(average, interval["average of steps" == max("average of steps")])
max <- (average[which.max(average$"average of steps"), ])$interval
max <- average[which.max(average$"average of steps"), ]
View(data)
View(max)
ag <- with(average, interval["average of steps" == max(as.numeric("average of steps")])
ag <- with(average, interval["average of steps" == max(as.numeric("average of steps"))])
print(ag)
average <- aggregate(data$steps, by=data["interval"], FUN=mean, na.rm=TRUE)
colnames(average) <- c("interval", "average of steps")
View(average)
colnames(average) <- c("interval", "averagesteps")
View(average)
plot(average$interval), average$averagesteps, type = "l")
plot(average$interval, average$averagesteps, type = "l")
test <- as.ts(average)
plot(test, type = "l")
max <- average[which.max(average$averagesteps), ]
View(max)
max <- (average[which.max(average$averagesteps), ])interval
max <- (average[which.max(average$averagesteps), ])$interval
e(data$steps, by=data["interval"], FUN=mean, na.rm=TRUE)
colnames(average) <- c("interval", "averagesteps")
plot(average$interval, average$averagesteps, type = "l")
max <- (average[which.
missingSteps <- sum(is.na(data$steps))
missingSteps <- sum(is.na(data$steps))
missingDates <- sum(is.na(data$date))
missingInterval <- sum(is.na(data$interval))
rowsNA <- sum(!complete.cases(data))
rows <- !complete.cases(data)
rows <- df(!complete.cases(data))
rows <- data.frame(!complete.cases(data))
View(rows)
rows <- data[complete.cases(data),]
View(rows)
rows <- data[!complete.cases(data),]
View(rows)
average <- aggregate(data$steps, by=data["interval"], FUN=mean, na.rm=TRUE)
colnames(average) <- c("interval", "averagesteps")
View(average)
total <- merge(rows,average,by="interval")
View(total)
rows2 <- data[complete.cases(data),]
total <- merge(total,rows2,by=c("interval","date"))
total <- merge(total,rows2,by=c("interval","date"))
total <- merge(rows,average,by="interval")
total2 <- merge(total,data,by=c("interval","date"))
View(total2)
total <- merge(rows,average,by="interval")
View(total)
total[,steps,drop=True]
total[,steps,drop=TRUE]
total[,total$steps,drop=TRUE]
total[,"steps",drop=TRUE]
View(total)
total <- total[,"steps",drop=TRUE]
total <- merge(rows,average,by="interval")
total <- subset(total, select = -"steps")
total <- subset(total, select = -c("steps"))
total <- subset(total, select = -"steps")
total <- subset(total, select = -steps)
View(total)
rows <- data[!complete.cases(data),]
View(rows)
rows[which(is.na(rows)),] <- 0
rows[is.na(rows)] <- 0
rows[is.na(rows)] <- 0.0
rows[is.na(rows)] <- 0L
rows <- data[!complete.cases(data),]
rows2 <- data[complete.cases(data),]
total <- merge(rows,average,by="interval")
total <- subset(total, select = -steps)
View(total)
colnames(total) <- c("interval", "date", "steps")
View(total)
View(rows2)
View(data)
View(rows)
View(rows2)
View(total)
test <- rbind(rows2, total)
View(test)
View(data)
View(test)
test
View(total2)
total <- merge(subset(total, select = -steps),average,by="interval")
data <- read.csv("./activity.csv")
average <- aggregate(data$steps, by=data["interval"], FUN=mean, na.rm=TRUE)
colnames(average) <- c("interval", "averagesteps")
rowsNA <- data[!complete.cases(data),]
rowsCO <- data[complete.cases(data),]
total <- merge(subset(rowsNA, select = -steps),average,by="interval")
colnames(total) <- c("interval", "date", "steps")
View(total)
test <- merge(data, newRows, by=c("interval", "date"))
newRows <- merge(subset(rowsNA, select = -steps),average,by="interval")
colnames(newRows) <- c("interval", "date", "steps")
test <- merge(data, newRows, by=c("interval", "date"))
View(test)
test1 <- rbind(rowsCO, newRows)
test <- merge(data, test1, by=c("interval", "date"))
View(test)
newRows <- merge(subset(rowsNA, select = -steps),average,by="interval")
colnames(newRows) <- c("interval", "date", "stepsN")
test1 <- rbind(rowsCO, newRows)
test <- merge(data, test1, by=c("interval", "date"))
View(test)
View(test1)
newRows <- merge(subset(rowsNA, select = -steps),average,by="interval")
colnames(newRows) <- c("interval", "date", "steps")
test1 <- rbind(rowsCO, newRows)
test <- merge(data, test1, by=c("interval", "date"))
test <- subset(test, select = -steps.x)
View(test)
colnames(test) <- c("interval", "date", "steps")
View(test)
transform(test, steps = as.integer(steps))
test <- transform(test, steps = as.integer(steps))
View(test)
View(data)
data <- read.csv("./activity.csv")
average <- aggregate(data$steps, by=data["interval"], FUN=mean, na.rm=TRUE)
colnames(average) <- c("interval", "averagesteps")
rowsNA <- data[!complete.cases(data),]
View(data)
View(rowsNA)
rowsCO <- data[complete.cases(data),]
rowsNA <- merge(subset(rowsNA, select = -steps),average,by="interval")
View(rowsNA)
colnames(rowsNA) <- c("interval", "date", "steps")
rowsNA <- rbind(rowsCO, rowsNA)
rm(rowsCO)
data2 <- subset(data, select = -steps)
View(data2)
data2 <- merge(data2, rowsNA, by=c("interval", "date"))
View(data2)
colnames(data2) <- c("interval", "date", "steps")
rm(rowsNA)
data2 <- transform(data2, steps = as.integer(steps))
View(data2)
View(data)
data2[ ,names(data2)[c("steps", "date", "interval")]]
data2[ ,names(data2)[c(steps, date, interval)]]
data2[ ,names(data2)[c("steps","date","interval")]]
data2 <- data2[ ,c("steps","date","interval")]
View(data2)
data <- read.csv("./activity.csv")
average <- aggregate(data$steps, by=data["interval"], FUN=mean, na.rm=TRUE)
colnames(average) <- c("interval", "averagesteps")
rowsNA <- data[!complete.cases(data),]
rowsCO <- data[complete.cases(data),]
rowsNA <- merge(subset(rowsNA, select = -steps),average,by="interval")
colnames(rowsNA) <- c("interval", "date", "steps")
rowsNA <- rbind(rowsCO, rowsNA)
View(rowsNA)
View(data)
rm(rowsCO)
data2 <- subset(data, select = -steps)
View(data2)
data2 <- merge(data2, rowsNA, by=c("interval", "date"))
View(data)
View(data2)
---
library(plyr)
?join
data <- read.csv("./activity.csv")
average <- aggregate(data$steps, by=data["interval"], FUN=mean, na.rm=TRUE)
colnames(average) <- c("interval", "averagesteps")
rowsNA <- data[!complete.cases(data),]
rowsCO <- data[complete.cases(data),]
rowsNA <- merge(subset(rowsNA, select = -steps),average,by="interval")
colnames(rowsNA) <- c("interval", "date", "steps")
rowsNA <- rbind(rowsCO, rowsNA)
rm(rowsCO)
data2 <- subset(data, select = -steps)
data2 <- join(data2, rowsNA, by=c("interval", "date"))
View(data)
View(data2)
colnames(data2) <- c("interval", "date", "steps")
rm(rowsNA)
data2 <- transform(data2, steps = as.integer(steps))
data2 <- data2[ ,c("steps","date","interval")]
View(data2)
rowsNA <- data[!complete.cases(data),]
rowsCO <- data[complete.cases(data),]
rowsNA <- merge(subset(rowsNA, select = -steps),average,by="interval")
colnames(rowsNA) <- c("interval", "date", "steps")
rowsNA <- rbind(rowsCO, rowsNA)
rm(rowsCO)
data2 <- subset(data, select = -steps)
View(data)
View(data2)
data2 <- join(data2, rowsNA, by=c("interval", "date"))
View(data2)
rm(rowsNA)
data2 <- transform(data2, steps = as.integer(steps))
View(data2)
data2 <- data2[ ,c("steps","date","interval")]
View(data2)
sum <- aggregate(data$steps, by=data["date"], FUN=sum)
colnames(sum) <- c("date", "sumofsteps")
## What is mean total number of steps taken per day?
hist(sum$sumofsteps, col = "red", main = "Histogram of the total number of steps taken each day", xlab = "Steps")
mean <- mean(sum$sumofsteps, na.rm = TRUE)
median <- median(sum$sumofsteps, na.rm = TRUE)
sum2 <- aggregate(data2$steps, by=data2["date"], FUN=sum)
colnames(sum2) <- c("date", "sumofsteps")
hist(sum2$sumofsteps, col = "red", main = "Histogram of the total number of steps taken each day", xlab = "Steps")
mean <- mean(sum2$sumofsteps, na.rm = TRUE)
median <- median(sum2$sumofsteps, na.rm = TRUE)
weekdays(data2$date)
as.Date(data2$date, "%m-%d-%Y")
as.Date(data2$date, "%Y-%m-%d")
head(as.Date(data2$date, "%Y-%m-%d"))
View(data2)
weekdays(data2$date)
lapply(data2, class)
data2$date <- as.Date(data2$date, "%Y-%m-%d")
lapply(data2, class)
View(data2)
weekdays(data2$date)
Sys.setlocale(category = "LC_ALL", "C")
weekdays(data2$date)
data2$new.col <- weekdays(data2$date)
View(data2)
data2$weekday <- weekdays(data2$date)
View(data2)
isWeekend(data2$weekday)
data2$type <- with(data2$weekday, ifelse("Saturday", "weekend", ifelse("Sunday", "weekend", "weekday"))
)
data2$type <- with(data2$weekday, ifelse("Saturday", "weekend", ifelse("Sunday", "weekend", "weekday")))
with(data2$weekday, ifelse("Saturday", "weekend", ifelse("Sunday", "weekend", "weekday")))
ifelse(data2$weekday = "Saturday","weekend", "weekday")
ifelse(data2$weekday == "Saturday","weekend", "weekday")
ifelse(data2$weekday == "Saturday","weekend", ifelse(data2$weekday == "Sunday","weekend", "weekday"))
data2$type <- ifelse(data2$weekday == "Saturday","weekend", ifelse(data2$weekday == "Sunday","weekend", "weekday"))
View(data2)
average2 <- aggregate(data2$steps, by=data2[c("interval","type")], FUN=mean, na.rm=TRUE)
View(average2)
plot(average$interval, average$averagesteps, type = "l")
ts <- as.ts(average2)
plot(ts, type = "l")
plot(average$interval, average$averagesteps, type = "l")
library("lattice")
library(lattice)
library(plyr)
library("plyr")
View(average2)
colnames(average2) <- c("interval", "type", "averagesteps")
View(average2)
xyplot(interval ~ averagesteps, data = average2)
xyplot(interval ~ averagesteps, data = average2, type = "l")
xyplot(interval ~ averagesteps | type, data = average2, type = "l")
xyplot(interval ~ averagesteps | type, data = average2, layout = c(2, 1), type = "l")
xyplot(interval ~ averagesteps | type, data = average2, layout = c(1, 2), type = "l")
xyplot(averagesteps ~ interval | type, data = average2, layout = c(1, 2), type = "l")
hist(sum$sumofsteps, col = "red", main = "Histogram of the total number of steps taken each day", xlab = "Steps")
View(sum)
hist(sum$sumofsteps, col = "red", main = "Histogram of the total number of steps taken each day", xlab = "Steps", breaks=25)
hist(sum$sumofsteps, col = "red", main = "Histogram of the total number of steps taken each day", xlab = "Steps", breaks=30)
hist(sum$sumofsteps, col = "red", main = "Histogram of the total number of steps taken each day", xlab = "Steps", breaks=30)
hist(sum$sumofsteps, col = "red", main = "Histogram of the total number of steps taken each day", xlab = "Steps", breaks=20)
hist(sum$sumofsteps, col = "red", main = "Histogram of the total number of steps taken each day", xlab = "Steps", breaks=25)
mean <- mean(sum$sumofsteps, na.rm = TRUE)
hist(sum$sumofsteps, col = "red", main = "Histogram of the total number of steps taken each day", xlab = "Steps", breaks=25)
average <- aggregate(data$steps, by=data["interval"], FUN=mean, na.rm=TRUE)
colnames(average) <- c("interval", "averagesteps")
plot(average$interval, average$averagesteps, type = "l")
hist(sum$sumofsteps, col = "red", main = "Histogram of the total number of steps taken each day", xlab = "Steps", breaks=25)
hist(sum$sumofsteps, col = "red", main = "Histogram of the total number of steps taken each day", xlab = "Steps", breaks=15)
hist(sum$sumofsteps, col = "red", main = "Histogram of the total number of steps taken each day", xlab = "Steps", breaks=5)
hist(sum$sumofsteps, col = "red", main = "Histogram of the total number of steps taken each day", xlab = "Steps")
xyplot(averagesteps ~ interval | type, data = average2, layout = c(1, 2), type = "l")
xyplot(averagesteps ~ interval, data = average, type = "l")

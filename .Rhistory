source('~/Advisory/3_Coursera - The Data Science Specialization/2 - R Programming/3_Project/ProgrammingAssignment2/cachematrix.R')
amatrix = makeCacheMatrix(matrix(c(1,2,3,4), nrow=2, ncol=2))
cacheSolve(amatrix)
source('~/.active-rstudio-document')
cacheSolve(amatrix)
amatrix = makeCacheMatrix(matrix(c(1,2,3,4), nrow=2, ncol=2))
cacheSolve(amatrix)
source('~/.active-rstudio-document')
amatrix = makeCacheMatrix(matrix(c(1,2,3,4), nrow=2, ncol=2))
cacheSolve(amatrix)
source('~/.active-rstudio-document')
amatrix = makeCacheMatrix(matrix(c(1,2,3,4), nrow=2, ncol=2))
cacheSolve(amatrix)
source('~/.active-rstudio-document')
solve()
inverse()
setwd("~/Advisory/3_Coursera - The Data Science Specialization/5 - Reproducible Research/2_Assignment 1/RepData_PeerAssessment1")
install.package(knitr)
install.packages('knitr', dependencies = TRUE)
data <- read.csv("./activity.csv")
View(data)
names(data)
means <- aggregate(data[steps], by=data[date], FUN=mean)
means <- aggregate(data$steps, by=data$date, FUN=mean)
means <- aggregate(data$steps, by=data["date"]", FUN=mean)
""
means <- aggregate(data$steps, by=data["date"], FUN=mean)
View(means)
median <- aggregate(data$steps, by=data["date"], FUN=median)
View(median)
hist(data$steps, col = "red", main = "Global Active Power", xlab = "Global Active Power (kilowatts)")
hist(data$steps, col = "red", main = "Histogram of the total number of steps taken each day", xlab = "Steps")
sum <- aggregate(data$steps, by=data["date"], FUN=sum)
View(sum)
sum <- aggregate(data$steps, by=list(data$date), FUN=sum)
## What is mean total number of steps taken per day?
hist(data$steps, col = "red", main = "Histogram of the total number of steps taken each day", xlab = "Steps")
sum <- aggregate(data$steps, by=list(t=data$date), FUN=sum)
sum <- aggregate(data$steps, list(t=data$date), FUN=sum)
sum <- aggregate(data$steps, by=data["date"], FUN=sum)
## What is mean total number of steps taken per day?
hist(data$steps, col = "red", main = "Histogram of the total number of steps taken each day", xlab = "Steps")
## Loading and preprocessing the data
data <- read.csv("./activity.csv")
sum <- aggregate(data$steps, by=data["date"], FUN=sum)
## What is mean total number of steps taken per day?
hist(data$steps, col = "red", main = "Histogram of the total number of steps taken each day", xlab = "Steps")
mean <- aggregate(data$steps, by=data["date"], FUN=mean)
mean <- aggregate(data$steps, by=data["date"], FUN=mean)
mean <- aggregate(data$steps, by=data["date"], FUN=mean)
median <- aggregate(data$steps, by=data["date"], FUN=median)
---
title: "Reproducible Research: Peer Assessment 1"
output:
html_document:
keep_md: true
---
## Loading and preprocessing the data
data <- read.csv("./activity.csv")
sum <- aggregate(data$steps, by=data["date"], FUN=sum)
## What is mean total number of steps taken per day?
hist(data$steps, col = "red", main = "Histogram of the total number of steps taken each day", xlab = "Steps")
mean <- aggregate(data$steps, by=data["date"], FUN=mean)
median <- aggregate(data$steps, by=data["date"], FUN=median)
## What is the average daily activity pattern?
## Imputing missing values
## Are there differences in activity patterns between weekdays and weekends?
View(sum)
colnames(sum) <- c("date", "sum of steps")
View(sum)
hist(sum$"sum of steps", col = "red", main = "Histogram of the total number of steps taken each day", xlab = "Steps")
View(mean)
View(data)
View(sum)
View(mean)
mean <- mean(sum$"sum of steps", na.rm = TRUE)
median <- median(sum$"sum of steps", na.rm = TRUE)
median <- median(sum$"sum of steps", na.rm = FALSE)
median <- median(sum$"sum of steps", na.rm = TRUE)
average <- aggregate(data$steps, by=data["interval"], FUN=mean)
View(average)
average <- aggregate(data$steps, by=data["interval"], FUN=mean, na.rm=TRUE)
View(average)
colnames(sum) <- c("interval", "average of steps")
View(average)
colnames(average) <- c("interval", "average of steps")
View(average)
plot(average$interval, average$"average of steps")
plot(average$interval, average$"average of steps", type = "l")
max <- apply(average, 2, which.max)
View(average)
max <- apply(average, 1, which.max)
max <- apply(average, 2, which.max)
max <- max(average$"average of steps")
max <- average[which.min(average$"average of steps"), ]
View(max)
max <- average[which.max(average$"average of steps"), ]
View(max)
max <- (average[which.max(average$"average of steps"), ])$interval
missingSteps <- sum(is.na(data$steps))
missingDates <- sum(is.na(data$date))
missingInterval <- sum(is.na(data$interval))
nrows <- sapply(data, function(f) nrow(complete.cases(read.csv(f))))
nrows <- nrow(complete.cases(data)
)
nrows <- nrow(complete.cases(data))
nrows <- complete.cases(data)
nrows <- sum(complete.cases(data))
nrows <- sum(!complete.cases(data))
